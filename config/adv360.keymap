
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define HYP(key) LS(LC(LA(LG(key))))
#define HYPER    LS(LC(LA(LGUI)))
#define MACLOCK  LG(LC(Q))
#define CMD_SHFT  LG(LSHFT)

/*                                 ADVANTAGE 360 KEY MATRIX / LAYOUT MAPPING
 ╭────────────────────────────┬────────────────────────────╮ ╭────────────────────────────┬────────────────────────────╮
 │  0   1   2   3   4   5   6 │  7   8   9  10  11  12  13 │ │ LN5 LN4 LN3 LN2 LN1 LN0 -- │ --  RN0 RN1 RN2 RN3 RN4 RN5│
 │ 14  15  16  17  18  19  20 │ 21  22  23  24  25  26  27 │ │ LT5 LT4 LT3 LT2 LT1 LT0 -- │ --  RT0 RT1 RT2 RT3 RT4 RT5│
 │ 28  29  30  31  32  33  34 │ 35  36  37  38  39  40  41 │ │ LM5 LM4 LM3 LM2 LM1 LM0 -- │ --  RM0 RM1 RM2 RM3 RM4 RM5│
 │ 42  43  44  45  46  47 ╭───┴───╮ 48  49  50  51  52  53 │ │ LB5 LB4 LB3 LB2 LB1 LB0╭───┴───╮ RB0 RB1 RB2 RB3 RB4 RB5│
 │ 54  55  56  57  58╭────╯       ╰────╮59  60  61  62  63 │ │ --  --  --  --  --╭────╯       ╰────╮--  --  --  --  -- │
 ╰───────────────────┼────────┬────────┼───────────────────╯ ╰───────────────────┼────────┬────────┼───────────────────╯
                 ╭───╯ 64  65 │ 66  67 ╰───╮                                 ╭───╯ --  -- │ --  -- ╰───╮
                 │ 68  69  70 │ 71  72  73 │                                 │ LH1 LH0 -- │ --  RH0 RH1│
                 ╰───────╮ 74 │ 75 ╭───────╯                                 ╰───────╮ -- │ -- ╭───────╯
                         ╰────┴────╯                                                 ╰────┴────╯
source: https://github.com/urob/zmk-nodefree-config/blob/8506dbaaee9b46d200aa553a94b6dbca8560a5e1/keypos_def/keypos_adv360.h
*/

#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  42 43 44 45 46 47 \
                  54 55 56 57 58

#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   35 36 37 38 39 40 41 \
		   48 49 50 51 52 53 \
		   59 60 61 62 63

#define THUMBS_LEFT 64 65 68 69 70 74

#define THUMBS_RIGHT 66 67 71 72 73 75

#define THUMBS THUMBS_LEFT THUMBS_RIGHT


&lt {
    tapping-term-ms = <200>;
};


/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "homerow_mods";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
    };
    hm_l: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "homerow_mods_left";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
	hold-trigger-key-positions = <KEYS_RIGHT THUMBS_RIGHT>;
    };
    hm_r: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "homerow_mods_right";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
	hold-trigger-key-positions = <KEYS_LEFT THUMBS_LEFT>;
    };
  };

    // Home row mods
    #define _A_CMD   &hm_l LGUI  A
    #define _S_OPT   &hm_l LALT  S
    //#define _D_CTRL  &hm_l LCTRL D
    #define _F_SHFT  &hm_l LSHFT F
    #define _CMD_SHFT_Z  &hm_l CMD_SHFT Z
    #define _J_SHFT  &hm_r RSHFT J
    //#define _K_CTRL  &hm_r RCTRL K
    #define _L_OPT   &hm_r RALT  L
    #define _SEMI_SHFT &hm_r RGUI SEMI
    #define _CMD_SHFT_FSLH  &hm_r CMD_SHFT FSLH

    // Thumb key mods
    #define _ESC_CTRL &hm_l LCTRL ESC
    #define _SPACE_CTRL &hm_r RCTRL SPACE



    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL  &kp N1         &kp N2      &kp N3       &kp N4       &kp N5         &tog 1                                                               &mo 3                   &kp N6  &kp N7       &kp N8          &kp N9      &kp N0            &kp MINUS
 &kp TAB    &kp Q          &kp W       &kp E        &kp R        &kp T          &macro_quotes                                                        &macro_vim_quit_all     &kp Y   &kp U        &kp I           &kp O       &kp P             &kp BSLH
 &kp ESC    _A_CMD         _S_OPT      &kp D        _F_SHFT      &kp G          &kp MACLOCK    &kp LGUI    &kp LCTRL           &kp RALT   &kp RGUI   &macro_vim_save_all     &kp H   _J_SHFT      &kp K           _L_OPT      _SEMI_SHFT        &kp SQT
 &kp LSHFT  _CMD_SHFT_Z    &kp X       &lt 2 C      &hm_l HYPER V  &kp B                                     &kp TAB             &kp TAB                                       &kp N   &hm_r HYPER M  &lt 2 COMMA     &kp DOT     _CMD_SHFT_FSLH    &kp RSHFT
 &mo 2      &kp GRAVE      &kp CAPS    &kp LEFT     &kp RIGHT                   _ESC_CTRL      &kp BSPC    &kp HYPER           &kp HYPER  &kp ENTER  _SPACE_CTRL                     &kp DOWN     &kp UP          &kp LBKT    &kp RBKT          &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                  &kp LGUI  &kp RCTRL       &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3   &kp F4     &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans   &trans     &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans   &trans     &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans   &kp TILDE  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans   &trans     &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                                  &trans   &none       &none            &none       &none       &none   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                             &bootloader   &none       &none            &none       &none       &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5       &none  &bt BT_CLR                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none       &none            &none       &none       &none   &none
  &none         &none         &none         &none         &none         &none                                                     &none                       &none                                       &none       &none            &none       &none       &none   &none
  &none         &none         &none         &none         &none                                      &bl BL_INC  &bl BL_DEC       &none                  &bl BL_TOG       &none                   &none          &bl BL_TOG  &rgb_ug RGB_TOG  &bl BL_INC  &bl BL_DEC   &none
            >;
        };

    };
};
